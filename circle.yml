# Customize the test machine
machine:
  timezone:
    Europe/London

  # Indicating Ruby to bypass virtual environments
  ruby:
    version:
      1.8.7-p358-falcon-perf

  # Override /etc/hosts
  hosts:
    circlehost: 127.0.0.1
    dev.mycompany.com: 127.0.0.1

# Customize checkout
checkout:
  post:
    - git submodule sync
    - git submodule update --init --recursive

# Customize dependencies
dependencies:
  pre:
    #- sudo apt-get update -qq

    # OS extra info
    - uname -a
    - ldd --version
    - python --version
    - python -c "import struct; print(struct.calcsize('P') * 8)"

    # Install tkinker and mock
    - sudo apt-get install -y python-support
    - sudo apt-get install python-tk
    - pip install mock

    # Install node.js
    - curl -sL https://deb.nodesource.com/setup_0.12 | sudo bash -
    - sudo apt-get install -y nodejs
    - node --version
    - npm --version

  override:
    # Build and pack
    - python package/build_pyinstaller.py linux
    - cd package/electron && npm install
    - cd package/electron && npm run release
    - python package/pack_ardublockly.py

    # Get the releases files as a environmenta variable
    - cd releases
    - for entry in *; do export ardublocklyZipFile="$entry"; done && echo $ardublocklyZipFile

  # Automatically cache and restore many dependencies between builds
  cache_directories:
    - "~/installers"

# Customize test commands
test:
  override:
    - python ardublocklyserver/tests/sketchcreator_test.py
    - python ardublocklyserver/tests/compilersettings_test.py

# Customize deployment commands
deployment:
  staging:
    branch: [master, circleci, electron]
    codedeploy:
      appname-1234:
        application_root: /releases
        region: us-west-2
        revision_location:
          revision_type: S3
          s3_location:
            bucket: ardublockly-builds
            key_pattern: linux/ardublockly_{BUILD_NUM}_64bit_{BRANCH}_{SHORT_COMMIT}.zip
        deployment_group: my-deployment-group

general:
  artifacts:
    - "releases/*"
